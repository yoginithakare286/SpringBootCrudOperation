package com.yts.revaux.ntquote.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NtQuoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteAllPropertiesEquals(NtQuote expected, NtQuote actual) {
        assertNtQuoteAutoGeneratedPropertiesEquals(expected, actual);
        assertNtQuoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteAllUpdatablePropertiesEquals(NtQuote expected, NtQuote actual) {
        assertNtQuoteUpdatableFieldsEquals(expected, actual);
        assertNtQuoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteAutoGeneratedPropertiesEquals(NtQuote expected, NtQuote actual) {
        assertThat(expected)
            .as("Verify NtQuote auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteUpdatableFieldsEquals(NtQuote expected, NtQuote actual) {
        assertThat(expected)
            .as("Verify NtQuote relevant properties")
            .satisfies(e -> assertThat(e.getSrNo()).as("check srNo").isEqualTo(actual.getSrNo()))
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getQuoteKey()).as("check quoteKey").isEqualTo(actual.getQuoteKey()))
            .satisfies(e -> assertThat(e.getSalesPerson()).as("check salesPerson").isEqualTo(actual.getSalesPerson()))
            .satisfies(e -> assertThat(e.getCustomerName()).as("check customerName").isEqualTo(actual.getCustomerName()))
            .satisfies(e -> assertThat(e.getQuoteNumber()).as("check quoteNumber").isEqualTo(actual.getQuoteNumber()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getMoldNumber()).as("check moldNumber").isEqualTo(actual.getMoldNumber()))
            .satisfies(e -> assertThat(e.getPartNumber()).as("check partNumber").isEqualTo(actual.getPartNumber()))
            .satisfies(e -> assertThat(e.getDueDate()).as("check dueDate").isEqualTo(actual.getDueDate()))
            .satisfies(e -> assertThat(e.getMoldManual()).as("check moldManual").isEqualTo(actual.getMoldManual()))
            .satisfies(e -> assertThat(e.getCustomerPo()).as("check customerPo").isEqualTo(actual.getCustomerPo()))
            .satisfies(e -> assertThat(e.getVendorQuote()).as("check vendorQuote").isEqualTo(actual.getVendorQuote()))
            .satisfies(e -> assertThat(e.getVendorPo()).as("check vendorPo").isEqualTo(actual.getVendorPo()))
            .satisfies(e -> assertThat(e.getCadFile()).as("check cadFile").isEqualTo(actual.getCadFile()))
            .satisfies(e -> assertThat(e.getQuotedPrice()).as("check quotedPrice").isEqualTo(actual.getQuotedPrice()))
            .satisfies(e -> assertThat(e.getDeliveryTime()).as("check deliveryTime").isEqualTo(actual.getDeliveryTime()))
            .satisfies(e -> assertThat(e.getQuoteDate()).as("check quoteDate").isEqualTo(actual.getQuoteDate()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedDate()).as("check updatedDate").isEqualTo(actual.getUpdatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteUpdatableRelationshipsEquals(NtQuote expected, NtQuote actual) {
        assertThat(expected)
            .as("Verify NtQuote relationships")
            .satisfies(e -> assertThat(e.getRfqDetail()).as("check rfqDetail").isEqualTo(actual.getRfqDetail()))
            .satisfies(e ->
                assertThat(e.getNtQuoteProjectApproval()).as("check ntQuoteProjectApproval").isEqualTo(actual.getNtQuoteProjectApproval())
            );
    }
}
