package com.yts.revaux.ntquote.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NtQuoteContractReviewInformationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteContractReviewInformationAllPropertiesEquals(
        NtQuoteContractReviewInformation expected,
        NtQuoteContractReviewInformation actual
    ) {
        assertNtQuoteContractReviewInformationAutoGeneratedPropertiesEquals(expected, actual);
        assertNtQuoteContractReviewInformationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteContractReviewInformationAllUpdatablePropertiesEquals(
        NtQuoteContractReviewInformation expected,
        NtQuoteContractReviewInformation actual
    ) {
        assertNtQuoteContractReviewInformationUpdatableFieldsEquals(expected, actual);
        assertNtQuoteContractReviewInformationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteContractReviewInformationAutoGeneratedPropertiesEquals(
        NtQuoteContractReviewInformation expected,
        NtQuoteContractReviewInformation actual
    ) {
        assertThat(expected)
            .as("Verify NtQuoteContractReviewInformation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteContractReviewInformationUpdatableFieldsEquals(
        NtQuoteContractReviewInformation expected,
        NtQuoteContractReviewInformation actual
    ) {
        assertThat(expected)
            .as("Verify NtQuoteContractReviewInformation relevant properties")
            .satisfies(e -> assertThat(e.getSrNo()).as("check srNo").isEqualTo(actual.getSrNo()))
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getContractNumber()).as("check contractNumber").isEqualTo(actual.getContractNumber()))
            .satisfies(e -> assertThat(e.getRevision()).as("check revision").isEqualTo(actual.getRevision()))
            .satisfies(e -> assertThat(e.getReviewDate()).as("check reviewDate").isEqualTo(actual.getReviewDate()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedDate()).as("check updatedDate").isEqualTo(actual.getUpdatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNtQuoteContractReviewInformationUpdatableRelationshipsEquals(
        NtQuoteContractReviewInformation expected,
        NtQuoteContractReviewInformation actual
    ) {
        assertThat(expected)
            .as("Verify NtQuoteContractReviewInformation relationships")
            .satisfies(e -> assertThat(e.getNtQuote()).as("check ntQuote").isEqualTo(actual.getNtQuote()));
    }
}
