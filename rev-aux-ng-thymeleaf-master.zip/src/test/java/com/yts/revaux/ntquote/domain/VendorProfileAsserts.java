package com.yts.revaux.ntquote.domain;

import static com.yts.revaux.ntquote.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class VendorProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendorProfileAllPropertiesEquals(VendorProfile expected, VendorProfile actual) {
        assertVendorProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertVendorProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendorProfileAllUpdatablePropertiesEquals(VendorProfile expected, VendorProfile actual) {
        assertVendorProfileUpdatableFieldsEquals(expected, actual);
        assertVendorProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendorProfileAutoGeneratedPropertiesEquals(VendorProfile expected, VendorProfile actual) {
        assertThat(expected)
            .as("Verify VendorProfile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendorProfileUpdatableFieldsEquals(VendorProfile expected, VendorProfile actual) {
        assertThat(expected)
            .as("Verify VendorProfile relevant properties")
            .satisfies(e -> assertThat(e.getSrNo()).as("check srNo").isEqualTo(actual.getSrNo()))
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getVendorId()).as("check vendorId").isEqualTo(actual.getVendorId()))
            .satisfies(e -> assertThat(e.getVendorName()).as("check vendorName").isEqualTo(actual.getVendorName()))
            .satisfies(e -> assertThat(e.getContact()).as("check contact").isEqualTo(actual.getContact()))
            .satisfies(e ->
                assertThat(e.getEntryDate())
                    .as("check entryDate")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(actual.getEntryDate())
            )
            .satisfies(e -> assertThat(e.getTradeCurrencyId()).as("check tradeCurrencyId").isEqualTo(actual.getTradeCurrencyId()))
            .satisfies(e -> assertThat(e.getAddress1()).as("check address1").isEqualTo(actual.getAddress1()))
            .satisfies(e -> assertThat(e.getAddress2()).as("check address2").isEqualTo(actual.getAddress2()))
            .satisfies(e -> assertThat(e.getAddress3()).as("check address3").isEqualTo(actual.getAddress3()))
            .satisfies(e -> assertThat(e.getMailId()).as("check mailId").isEqualTo(actual.getMailId()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getRating()).as("check rating").isEqualTo(actual.getRating()))
            .satisfies(e -> assertThat(e.getIsDeleteFlag()).as("check isDeleteFlag").isEqualTo(actual.getIsDeleteFlag()))
            .satisfies(e -> assertThat(e.getRelatedBuyerUid()).as("check relatedBuyerUid").isEqualTo(actual.getRelatedBuyerUid()))
            .satisfies(e -> assertThat(e.getCountry()).as("check country").isEqualTo(actual.getCountry()))
            .satisfies(e -> assertThat(e.getCountryFlag()).as("check countryFlag").isEqualTo(actual.getCountryFlag()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendorProfileUpdatableRelationshipsEquals(VendorProfile expected, VendorProfile actual) {
        // empty method
    }
}
